# Base de datos: si usas 
# - default, entonces se usa application-default.properties
#   (que crea una bd HSQLDB en memoria, cada vez que se lanza el proyecto)
# - externaldb, entonces usa application-externaldb.properties
#   (que espera una bd HSQLDB externa disponible en localhost)
spring.profiles.active: default

spring.datasource.username: sa
spring.datasource.password:

spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.HSQLDialect
spring.jpa.database: HSQL
spring.jpa.show-sql: true
# allow multi-line import.sql statements, from https://stackoverflow.com/a/15090964/15472
spring.jpa.properties.hibernate.hbm2ddl.import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor

logging.level.root: INFO

# ignore most hibernate warnings; comment or change if DB acts up
#logging.level.org.hibernate: ERROR
logging.level.org.hibernate.type=TRACE

# display  web framework setup (including what method listens on which mappings)
logging.level.org.springframework.web=DEBUG

# Configuracion de ruta donde se guardan/busca ficheros "de usuario"
# Todo lo que no sea parte inmutable de la aplicacion (ej.: logo) deberia
# guardarse/buscarse en esa ruta. Por ejemplo, fotos de usuarios.
es.ucm.fdi.base-path: /tmp/iw

# Si esta propiedad está presente, y su valor es 'true', la puedes detectar
# en thymeleaf via th:if="${application.debug}". Ver StartupConfig.java
es.ucm.fdi.debug: true

# Evinta el uso de cache, permitiendo hacer cambios a los templates sin tener
# que recargar la aplicación
spring.thymeleaf.cache: false

# Muestra stacktrace de errores en página de error cuando falla el parseo 
# de un template
server.error.include-stacktrace=always
